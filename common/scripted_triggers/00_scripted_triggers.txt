# SOME META SCRIPT EXAMPLES
# This also works for Scripted effects the same. Provided arguments will be pasted in
# wherever the key occurs. If it fails to compile you should get a proper error message
# and the source generated in the error log. There is no added overhead during runtime but
# if used extensivley it might make loading time longer.
#
# my_test_trigger = {
#	OR = {
#		has_country_modifier = $ARG1$_modifier
#		AND = {
#			has_country_modifier = $ARG2$_modifier
#			$CONTEXT$ = {
#				NOT = { has_country_modifier = $ARG1$_modifier }
#			}
#		}
#	}
# }
# Usage:
# my_test_trigger = { ARG1=foo ARG2=bar CONTEXT=FROM }

#GENERAL TRIGGERS
has_mil_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_tooltip
		OR = {
			advisor = army_organiser
			advisor = army_reformer
			advisor = commandant
			advisor = grand_captain
			advisor = recruitmaster
			advisor = fortification_expert
			advisor = quartermaster
		}
	}
}

has_mil_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_2_tooltip
		OR = {
			army_organiser = 2
			army_reformer = 2
			commandant = 2
			grand_captain = 2
			recruitmaster = 2
			fortification_expert = 2
			quartermaster = 2
		}
	}
}

has_mil_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_3_tooltip
		OR = {
			army_organiser = 3
			army_reformer = 3
			commandant = 3
			grand_captain = 3
			recruitmaster = 3
			fortification_expert = 3
			quartermaster = 3
		}
	}
}

has_adm_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_tooltip
		OR = {
			advisor = treasurer
			advisor = philosopher
			advisor = artist
			advisor = theologian
			advisor = master_of_mint
			advisor = inquisitor
			advisor = natural_scientist
		}
	}
}

has_adm_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_2_tooltip
		OR = {
			treasurer = 2
			philosopher = 2
			artist = 2
			theologian = 2
			master_of_mint = 2
			inquisitor = 2
			natural_scientist = 2
		}
	}
}

has_adm_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_3_tooltip
		OR = {
			treasurer = 3
			philosopher = 3
			artist = 3
			theologian = 3
			master_of_mint = 3
			inquisitor = 3
			natural_scientist = 3
		}
	}
}

has_adm_advisor_of_level = {
	OR = {
		treasurer = $level$
		philosopher = $level$
		artist = $level$
		theologian = $level$
		master_of_mint = $level$
		inquisitor = $level$
		natural_scientist = $level$
	}
}

has_dip_advisor_of_level = {
	OR = {
		statesman = $level$
		diplomat = $level$
		naval_reformer = $level$
		trader = $level$
		colonial_governor = $level$
		navigator = $level$
		spymaster = $level$
	}
}

has_mil_advisor_of_level = {
	OR = {
		army_organiser = $level$
		army_reformer = $level$
		commandant = $level$
		grand_captain = $level$
		recruitmaster = $level$
		fortification_expert = $level$
		quartermaster = $level$
	}
}

has_advisor_of_type_and_level = {
	has_$type$_advisor_of_level = { level = $level$ }
}


has_dip_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_tooltip
		OR = {
			advisor = statesman
			advisor = diplomat
			advisor = naval_reformer
			advisor = trader
			advisor = colonial_governor
			advisor = navigator
			advisor = spymaster
		}
	}
}

has_dip_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_2_tooltip
		OR = {
			statesman = 2
			diplomat = 2
			naval_reformer = 2
			trader = 2
			colonial_governor = 2
			navigator = 2
			spymaster = 2
		}
	}
}

has_dip_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_3_tooltip
		OR = {
			statesman = 3
			diplomat = 3
			naval_reformer = 3
			trader = 3
			colonial_governor = 3
			navigator = 3
			spymaster = 3
		}
	}
}


is_subject_other_than_tributary_trigger = { #Ie Tags that cannot conduct independent diplomacy
	custom_trigger_tooltip = {
		tooltip = is_subject_other_than_tributary_trigger_tooltip
		is_subject = yes
		NOT = { is_subject_of_type = tributary_state }
		NOT = { is_subject_of_type = cultural_sphere_of_influence_subject }
	}
}

is_free_or_tributary_trigger = { #I.e. Tags that can conduct independent diplomacy
	custom_trigger_tooltip = {
		tooltip = is_free_or_tributary_trigger_tooltip
		OR = {
			is_subject = no
			is_subject_of_type = tributary_state
			is_subject_of_type = cultural_sphere_of_influence_subject
		}
	}
}

#RIGHTS OF MAN TRIGGERS

#Ruler personality triggers
ruler_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		ruler_has_personality = just_personality
		ruler_has_personality = righteous_personality
		ruler_has_personality = tolerant_personality
		ruler_has_personality = free_thinker_personality
		ruler_has_personality = calm_personality
		ruler_has_personality = zealot_personality
		ruler_has_personality = pious_personality
		ruler_has_personality = lawgiver_personality
		ruler_has_personality = midas_touched_personality
		ruler_has_personality = incorruptible_personality
		ruler_has_personality = architectural_visionary_personality
		ruler_has_personality = scholar_personality
		ruler_has_personality = reformist_personality
	}
}

ruler_has_good_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		ruler_has_personality = careful_personality
		ruler_has_personality = entrepreneur_personality
		ruler_has_personality = industrious_personality
		ruler_has_personality = expansionist_personality
		ruler_has_personality = navigator_personality
		ruler_has_personality = well_connected_personality
		ruler_has_personality = secretive_personality
		ruler_has_personality = intricate_web_weaver_personality
		ruler_has_personality = benevolent_personality
		ruler_has_personality = charismatic_negotiator_personality
		ruler_has_personality = silver_tongue_personality
	}
}

ruler_has_good_mil_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		ruler_has_personality = bold_fighter_personality
		ruler_has_personality = tactical_genius_personality
		ruler_has_personality = fierce_negotiator_personality
		ruler_has_personality = conqueror_personality
		ruler_has_personality = strict_personality
		ruler_has_personality = inspiring_leader_personality
		ruler_has_personality = martial_educator_personality
		ruler_has_personality = kind_hearted_personality
		ruler_has_personality = legendary_pirate_personality
	}
}

ruler_has_bad_adm_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		ruler_has_personality = embezzler_personality
		ruler_has_personality = sinner_personality
		ruler_has_personality = greedy_personality
		ruler_has_personality = obsessive_perfectionist_personality
	}
}

ruler_has_bad_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		ruler_has_personality = drunkard_personality
		ruler_has_personality = babbling_buffoon_personality
		ruler_has_personality = cruel_personality
		ruler_has_personality = naive_personality
		ruler_has_personality = malevolent_personality
		ruler_has_personality = loose_lips_personality
	}
}

ruler_has_bad_mil_personality = {
	has_dlc = "Rights of Man" 
	#OR = {
	ruler_has_personality = craven_personality
	#}
}

#Heir personality triggers
heir_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		heir_has_personality = just_personality
		heir_has_personality = righteous_personality
		heir_has_personality = tolerant_personality
		heir_has_personality = free_thinker_personality
		heir_has_personality = calm_personality
		heir_has_personality = zealot_personality
		heir_has_personality = pious_personality
		heir_has_personality = lawgiver_personality
		heir_has_personality = midas_touched_personality
		heir_has_personality = incorruptible_personality
		heir_has_personality = architectural_visionary_personality
		heir_has_personality = scholar_personality
		heir_has_personality = reformist_personality
	}
}

heir_has_good_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		heir_has_personality = careful_personality
		heir_has_personality = entrepreneur_personality
		heir_has_personality = industrious_personality
		heir_has_personality = expansionist_personality
		heir_has_personality = navigator_personality
		heir_has_personality = well_connected_personality
		heir_has_personality = secretive_personality
		heir_has_personality = intricate_web_weaver_personality
		heir_has_personality = benevolent_personality
		heir_has_personality = charismatic_negotiator_personality
		heir_has_personality = silver_tongue_personality

	}
}

heir_has_good_mil_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		heir_has_personality = bold_fighter_personality
		heir_has_personality = tactical_genius_personality
		heir_has_personality = fierce_negotiator_personality
		heir_has_personality = conqueror_personality
		heir_has_personality = strict_personality
		heir_has_personality = inspiring_leader_personality
		heir_has_personality = martial_educator_personality
		heir_has_personality = kind_hearted_personality
		heir_has_personality = legendary_pirate_personality
	}
}

heir_has_bad_adm_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		heir_has_personality = embezzler_personality
		heir_has_personality = sinner_personality
		heir_has_personality = greedy_personality
		heir_has_personality = obsessive_perfectionist_personality
	}
}

heir_has_bad_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		heir_has_personality = drunkard_personality
		heir_has_personality = babbling_buffoon_personality
		heir_has_personality = cruel_personality
		heir_has_personality = naive_personality
		heir_has_personality = malevolent_personality
		heir_has_personality = loose_lips_personality
	}
}

heir_has_bad_mil_personality = {
	has_dlc = "Rights of Man" 
	#OR = {
	heir_has_personality = craven_personality
	#}
}

#Queen personality triggers
consort_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		consort_has_personality = just_personality
		consort_has_personality = righteous_personality
		consort_has_personality = tolerant_personality
		consort_has_personality = free_thinker_personality
		consort_has_personality = calm_personality
		consort_has_personality = zealot_personality
		consort_has_personality = pious_personality
		consort_has_personality = lawgiver_personality
		consort_has_personality = midas_touched_personality
		consort_has_personality = incorruptible_personality
		consort_has_personality = architectural_visionary_personality
		consort_has_personality = scholar_personality
		consort_has_personality = reformist_personality
	}
}

consort_has_good_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		consort_has_personality = careful_personality
		consort_has_personality = entrepreneur_personality
		consort_has_personality = industrious_personality
		consort_has_personality = expansionist_personality
		consort_has_personality = navigator_personality
		consort_has_personality = well_connected_personality
		consort_has_personality = secretive_personality
		consort_has_personality = intricate_web_weaver_personality
		consort_has_personality = benevolent_personality
		consort_has_personality = charismatic_negotiator_personality
		consort_has_personality = silver_tongue_personality

	}
}

consort_has_good_mil_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		consort_has_personality = bold_fighter_personality
		consort_has_personality = tactical_genius_personality
		consort_has_personality = fierce_negotiator_personality
		consort_has_personality = conqueror_personality
		consort_has_personality = strict_personality
		consort_has_personality = inspiring_leader_personality
		consort_has_personality = martial_educator_personality
		consort_has_personality = kind_hearted_personality
		consort_has_personality = legendary_pirate_personality
	}
}

consort_has_bad_adm_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		consort_has_personality = embezzler_personality
		consort_has_personality = sinner_personality
		consort_has_personality = greedy_personality
		consort_has_personality = obsessive_perfectionist_personality
	}
}

consort_has_bad_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		consort_has_personality = drunkard_personality
		consort_has_personality = babbling_buffoon_personality
		consort_has_personality = cruel_personality
		consort_has_personality = naive_personality
		consort_has_personality = malevolent_personality
		consort_has_personality = loose_lips_personality
	}
}

consort_has_bad_mil_personality = {
	has_dlc = "Rights of Man" 
	consort_has_personality = craven_personality
}
 
can_have_center_of_reformation_trigger = { #Province Scope
	#$RELIGION$ needs to match the religion of the center that is being spawned.
	continent = europe
	OR = {
		religion_group = liberalism_group
		religion_group = conservatism_group
		religion_group = socialism_group
		religion_group = populism_group

	}
	is_in_capital_area = yes
	is_reformation_center = no
	is_island = no
	expelling_minorities = no
	development = 3
	NOT = {
		any_neighbor_province = {
			is_reformation_center = yes
		}
	}
	NOT = {
		any_province = {
			area = PREV
			is_reformation_center = yes
			religion = $RELIGION$
		}
	}
	NOT = { has_climate = arctic }
	NOT = { has_climate = arid }
	NOT = { has_terrain = coastline }
	NOT = { has_terrain = coastal_desert }
	NOT = { has_terrain = steppe }
	NOT = { has_terrain = desert }
	NOT = { has_terrain = glacier }
	NOT = { has_climate = tropical }
}

province_viable_for_industrialization_events_trigger = { #Province Scope
	is_state = yes
	NOT = { devastation = 1 }
	OR = {
		is_in_capital_area = yes
		continent = CAPITAL
	}
	enlightenment = 100
}

unindustrialized_province_trigger = { #Province Scope
	NOT = { has_province_flag = had_economic_urbanization }
	NOT = { has_province_flag = swapped_to_cloth }
	NOT = { has_province_flag = swapped_to_paper }
	NOT = { has_province_flag = swapped_to_glass }
	NOT = { has_province_flag = industrial_urbanization }
	NOT = { has_province_flag = metalwork_center }
	NOT = { has_province_flag = textile_center }
	NOT = { has_province_flag = shipyards_of_x }
}

industrialized_province_trigger = { #Province Scope
	OR = {
		has_province_flag = had_economic_urbanization 
		has_province_flag = swapped_to_cloth
		has_province_flag = swapped_to_paper
		has_province_flag = swapped_to_glass
		has_province_flag = industrial_urbanization
		has_province_flag = metalwork_center
		has_province_flag = textile_center
		has_province_flag = shipyards_of_x
	}
}

was_never_end_game_tag_trigger = {	#Country Scope
	OR = {
		NOT = { end_game_tags_blocked = yes }
		custom_trigger_tooltip = {
			tooltip = was_never_end_game_tag_trigger_tt
			AND = {
				NOT = { was_tag = POL }
				NOT = { tag = POL }
				NOT = { was_tag = SIL }
				NOT = { tag = SIL }
				NOT = { was_tag = GER }
				NOT = { tag = GER }
				NOT = { was_tag = HCE }
				NOT = { tag = HCE }
				NOT = { was_tag = PRL }
				NOT = { tag = PRL }

			}
		}
	}
}

has_manufactory_trigger = { #Province Scope
	custom_trigger_tooltip = {
		tooltip = has_manufactory_trigger_tooltip
		OR = {
			has_building = wharf
			has_building = weapons
			has_building = textile
			has_building = tradecompany
			has_building = farm_estate
			has_building = mills
			has_building = furnace
			has_building = plantations
			has_building = ramparts
			has_building = soldier_households
			has_building = impressment_offices
			has_building = state_house
		}
	}
}

#Use this one if you want it to say which manufactory has to be built
# Does not include 1.30 manufactories
has_manufactory_no_custom_tooltip_trigger = { #Province Scope
	if = {
		limit = {
			OR = {
				trade_goods = naval_supplies
				trade_goods = fish
				trade_goods = salt
			}
		}
		has_building = wharf
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = copper
				trade_goods = iron
				trade_goods = gu_sulfur
				trade_goods = gu_oil
				trade_goods = gu_metalworking
				trade_goods = gu_chemicals
			}
		}
		has_building = weapons
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = wool
				trade_goods = cloth
				trade_goods = gu_hemp
			}
		}
		has_building = textile
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = gu_tourists
				trade_goods = gu_consumer_goods
				trade_goods = gu_confectionery
				trade_goods = gu_software
				trade_goods = fur
				trade_goods = gu_finances
				trade_goods = gu_electronics
				trade_goods = gu_processed_food
				trade_goods = gu_vehicles
			}
		}
		has_building = tradecompany
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = gu_mushrooms
				trade_goods = gu_fruits
				trade_goods = wine
				trade_goods = gu_vegetables
				trade_goods = gu_dairy
				trade_goods = gu_oscypek
				trade_goods = gu_apiculture
				trade_goods = gu_horses
				trade_goods = gu_beer
				trade_goods = gu_vodka
				trade_goods = gu_wheat
				trade_goods = gu_triticale
				trade_goods = gu_barley
				trade_goods = gu_maize
				trade_goods = gu_poultry
				trade_goods = gu_pigs
				trade_goods = gu_cattle
			}
		}
		has_building = farm_estate
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = paper
				trade_goods = gu_lumber
				trade_goods = gu_stone
				trade_goods = glass
				trade_goods = gu_amber
				trade_goods = gu_ceramics
				trade_goods = gu_woodworking
			}
		}
		has_building = mills
	}
	else_if = {
		limit = {
			trade_goods = gu_coal
			trade_goods = gu_euro
		}
		has_building = furnace
	}
	else = {
		has_building = plantations
	}
}

has_no_manufactory_trigger = { #Province Scope
	NOT = { has_building = wharf }
	NOT = { has_building = weapons }
	NOT = { has_building = textile }
	NOT = { has_building = tradecompany }
	NOT = { has_building = farm_estate }
	NOT = { has_building = mills }
	NOT = { has_building = plantations }
	NOT = { has_building = furnace }
	NOT = { has_building = ramparts }
	NOT = { has_building = soldier_households }
	NOT = { has_building = impressment_offices }
	NOT = { has_building = state_house }
}

# Does not include new manufactories - they don't fit for the purposes of this trigger
root_can_build_manufactory_here_trigger = {
    has_no_manufactory_trigger = yes
    num_free_building_slots = 1
	OR = {
		AND = {
            OR = {
                trade_goods = naval_supplies
                trade_goods = fish
                trade_goods = salt
            }
			ROOT = { dip_tech = 11 }
		}
		AND = {
            OR = {
                trade_goods = copper
                trade_goods = iron
            }
			ROOT = { mil_tech = 11 }
		}
		AND = {
            OR = {
                trade_goods = wool
                trade_goods = cloth
                trade_goods = gu_vehicles
                trade_goods = gu_oil
            }
			ROOT = { adm_tech = 11 }
		}
		AND = {
            OR = {
                trade_goods = gu_mushrooms
                trade_goods = gu_hemp
                trade_goods = sugar
                trade_goods = gu_oscypek
                trade_goods = gu_vodka
                trade_goods = gu_beer
            }
			ROOT = { adm_tech = 14 }
		}
		AND = {
            OR = {
                trade_goods = gu_stone
                trade_goods = gu_fruits
                trade_goods = cloves
                trade_goods = fur
                trade_goods = gu_sulfur
            }
			ROOT = { dip_tech = 14 }
		}
		AND = {
            OR = {
                trade_goods = gu_wheat
                trade_goods = gu_cattle
                trade_goods = wine
            }
			ROOT = { adm_tech = 6 }
		}
		AND = {
            OR = {
                trade_goods = paper
                trade_goods = gu_amber
                trade_goods = gu_lumber
                trade_goods = glass
                trade_goods = gu_ceramics
            }
			ROOT = { adm_tech = 16 }
		}
		AND = {
            trade_goods = gu_coal
			ROOT = { adm_tech = 21 }
		}
	}
}

# This is for when we want to award government reform progress and need to check if that's useful to the player based on dlc ownership
has_completed_all_reforms_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_completed_all_reforms_trigger_tooltip
		NOT = { has_dlc = "Emperor" }
		OR = {
			AND = {
				government = monarchy
				reform_level = 11
			}
			AND = {
				government = republic
				reform_level = 13
			}
			AND = {
				government = theocracy
				reform_level = 13
			}
			AND = {
				government = native
				reform_level = 5
			}
			AND = {
				government = tribal
				reform_level = 6
			}
		}
	}
}

# This is for all other situations
has_final_tier_reforms_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_completed_all_reforms_trigger_tooltip
		OR = {
			AND = {
				government = monarchy
				reform_level = 11
			}
			AND = {
				government = republic
				reform_level = 13
			}
			AND = {
				government = theocracy
				reform_level = 13
			}
			AND = {
				government = native
				reform_level = 5
			}
			AND = {
				government = tribal
				reform_level = 6
			}
		}
	}
}

has_holy_order_trigger = {
	# if = {
	# 	limit = {
	# 		has_dlc = "Golden Century"
	# 	}
	# 	custom_trigger_tooltip = {
	# 		tooltip = "has_holy_order_trigger_tooltip"
	# 	}
	# }
}

has_any_holy_order = {
	# custom_trigger_tooltip = {
	# 	tooltip = "has_holy_order_trigger_tooltip"
	# 	OR = {
	# 		holy_order = benedictines
	# 	}
	# }
}

can_create_holy_orders = {
}

is_ahead_of_time_in_technology = {
	custom_trigger_tooltip = {
		tooltip = is_ahead_of_time_in_technology_$tech$
		has_global_modifier_value = {
			which = ahead_of_time_benefit_$tech$
			value = 1
		}
	}
}

num_of_age_rewards_taken = {
	custom_trigger_tooltip = {
		tooltip = num_of_age_rewards_taken_$amount$
		has_global_modifier_value = {
			which = num_of_age_rewards
			value = $amount$
		}
	}
}

has_orthodox_religious_icon_trigger = {
}

can_have_incorporated_vassals = {

}

same_govt_as_root_trigger = {
	custom_trigger_tooltip = {
		tooltip = same_govt_as_root_tt
		OR = {
			AND = {
				government = theocracy
				root = { government = theocracy }
			}
			AND = {
				government = monarchy
				root = { government = monarchy }
			}
			AND = {
				government = republic
				root = { government = republic }
			}
			AND = {
				government = dictatorship
				root = { government = dictatorship }
			}
			AND = {
				government = tribal
				root = { government = tribal }
			}
			AND = {
				government = native
				root = { government = native }
			}
		}
	}
}

# Building triggers

has_tax_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_tax_building_trigger_tt
		OR = {
			has_building = temple
			has_building = cathedral
		}
	}
}

has_trade_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_trade_building_trigger_tt
		OR = {
			has_building = marketplace
			has_building = trade_depot
			has_building = stock_exchange
		}
	}
}

has_production_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_production_building_trigger_tt
		OR = {
			has_building = workshop
			has_building = counting_house
		}
	}
}

has_manpower_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_manpower_building_trigger_tt
		OR = {
			has_building = barracks
			has_building = training_fields
		}
	}
}

has_shipyard_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_shipyard_building_trigger_tt
		OR = {
			has_building = shipyard
			has_building = grand_shipyard
		}
	}
}

has_dock_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_dock_building_trigger_tt
		OR = {
			has_building = dock
			has_building = drydock
		}
	}
}

has_forcelimit_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_forcelimit_building_trigger_tt
		OR = {
			has_building = regimental_camp
			has_building = conscription_center
		}
	}
}

has_courthouse_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_courthouse_building_trigger_tt
		OR = {	
			has_building = courthouse
			has_building = town_hall
		}
	}
}

has_fort_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_fort_building_trigger_tt
		OR = {
			has_building = fort_15th
			has_building = fort_16th
			has_building = fort_17th
			has_building = fort_18th
		}
	}
}

has_coast_defense_building_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_coast_defense_building_trigger_tt
		OR = {
			has_building = coastal_defence
			has_building = naval_battery
		}
	}
}

has_been_insulted_by_root = {
	custom_trigger_tooltip = {
		tooltip = has_been_insulted_by_root
		OR = {
			has_opinion_modifier = {
				who = ROOT
				modifier = insulted
			}
			has_opinion_modifier = {
				who = ROOT
				modifier = scornfully_insulted
			}
		}
	}
}

valid_for_personal_unions_trigger = {
	exists = yes
	is_subject = no
	government = monarchy

}

is_shadow_kingdom_eligible_trigger = {
	is_emperor = no
	is_part_of_hre = yes
	OR = {
		capital_scope = { region = dolnoslaskie_region }
		AND = {
			culture_group = dolnoslasga_cg
			any_owned_province = {
				region = dolnoslaskie_region
			}
		}
	}
}

will_leave_for_shadow_kingdom_trigger = {
	NOT = {
		OR = {
			has_country_flag = reined_in_for_shadow_kingdom
			emperor = {
				alliance_with = PREV
			}
			has_opinion = {
				who = emperor
				value = 150
			}
			is_subject_of = emperor
			has_reform = free_city
		}
	}
}

#province scope; checks it is highest or joint highest supply limit in the area owned by you (useful for spawning rebels)
highest_supply_limit_in_area = {
	NOT = {
		area_for_scope_province = { 
			NOT = { province_id = prev }
			owned_by = root
			supply_limit = prev 
			NOT = { prev = { supply_limit = prev } }
		}
	}
}

# Has current fort level
province_has_current_tech_fort_trigger = {
	custom_trigger_tooltip = {
		tooltip = province_has_current_tech_fort_trigger_tt
		if = {
			limit = {
				owner = {
					NOT = { mil_tech = 14 }
				}
			}
			OR = {
				has_building = fort_15th
				has_building = fort_16th
				has_building = fort_17th
				has_building = fort_18th
			}
		}
		else_if = {
			limit = {
				owner = {
					AND = {
						mil_tech = 14
						NOT = { mil_tech = 19 }
					}
				}
			}
			OR = {
				has_building = fort_16th
				has_building = fort_17th
				has_building = fort_18th
			}
		}
		else_if = {
			limit = {
				owner = {
					AND = {
						mil_tech = 19
						NOT = { mil_tech = 24 }
					}
				}
			}
			OR = {
				has_building = fort_17th
				has_building = fort_18th
			}
		}
		else_if = {
			limit = {
				owner = {
					mil_tech = 24
				}
			}
			has_building = fort_18th
		}
	}
}



province_has_current_tech_trade_trigger = {
	custom_trigger_tooltip = {
		tooltip = province_has_current_tech_trade_trigger_tt
		if = {
			limit = {
				owner = {
					NOT = { dip_tech = 17 }
				}
			}
			has_building = marketplace
		}
		else_if = {
			limit = {
				owner = {
					AND = {
						dip_tech = 17
						NOT = { dip_tech = 22 }
					}
				}
			}
			has_building = trade_depot
		}
		else_if = {
			limit = {
				owner = {
					dip_tech = 22
				}
			}
			has_building = stock_exchange
		}
	}
}


check_reducing_estate_revolt_size_trigger = {
	if = {
		limit = {
			NOT = { num_of_cities = 16 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 2
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 24 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 3
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 36 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 4
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 56 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 5
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 80 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 6
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 100 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 7
				has_province_flag = $FLAG$
			}
		}
	}
	else = {
		NOT = {
			num_of_owned_provinces_with = {
				value = 8
				has_province_flag = $FLAG$
			}
		}
	}
}

check_reducing_estate_revolt_size_more_trigger = {
	if = {
		limit = {
			NOT = { num_of_cities = 10 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 2
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 16 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 3
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 24 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 4
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 36 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 5
				has_province_flag = $FLAG$
			}
		}
	}
	else = {
		NOT = {
			num_of_owned_provinces_with = {
				value = 6
				has_province_flag = $FLAG$
			}
		}
	}
}

is_revolutionary_republic_trigger = {
	OR = {
		has_reform = revolutionary_republic_reform
		has_reform = junior_revolutionary_republic_reform
	}
}

revolution_event_can_happen_trigger = {
	OR = {
		revolution_target_exists = no
		has_dlc = "Emperor"
	}
	OR = {
		capital_scope = { 
			controlled_by = revolutionary_rebels
		}
		has_country_modifier = just_lost_to_revolutionary_rebels
		has_country_flag = revolution_disaster_immediate_revolution
	}
	is_revolutionary = no
}
#country scope, used in election events to check whether generated rulers may be female
republic_with_female_rulers_trigger = {
	OR = {
		has_active_policy = mandatory_service
		has_country_modifier = sister_suffragettes
		has_country_modifier = mary_inheritance_reforms
		has_reform = democratic_values_reform
	}
}

is_absolutism_active = {
	OR = {
		current_age = age_of_absolutism
		current_age = age_of_revolutions
	}
}

#Country scope
is_or_was_tag = {
	OR = {
		tag = $tag$
		was_tag = $tag$
	}
}

#Province scope
is_trade_node_province = {
	custom_trigger_tooltip = {
		tooltip = is_trade_node_province_tt
		OR = {
			province_id = 2978
			province_id = 4370
			province_id = 1777
			province_id = 292
			province_id = 296
			province_id = 1065
			province_id = 1058
			province_id = 4186
			province_id = 72
			province_id = 2991
			province_id = 2751
			province_id = 1006
			province_id = 2831
			province_id = 501
			province_id = 972
			province_id = 257
			province_id = 739
			province_id = 4511
			province_id = 969
			province_id = 2330
			province_id = 2461
			province_id = 2971
			province_id = 407
			province_id = 3190
			province_id = 2906
			province_id = 2923
			province_id = 2867
			province_id = 4761
			province_id = 4751
			province_id = 1318
			province_id = 441
			province_id = 262
			province_id = 1120
			province_id = 1034
			province_id = 4063
			province_id = 2788
			province_id = 1086
			province_id = 547

		}
	}
}

is_inland_trade_node_province = {
	custom_trigger_tooltip = {
		tooltip = is_inland_trade_node_province_tt
		OR = {
			# province_id = 2978
			# province_id = 4370
			# province_id = 1777
			# province_id = 292
			# province_id = 296
			# province_id = 1065
			# province_id = 1058
			# province_id = 4186
			# province_id = 72
			# province_id = 2991
			# province_id = 2751
			# province_id = 1006
			# province_id = 2831
			# province_id = 501
			# province_id = 972
			# province_id = 257
			# province_id = 739
			# province_id = 4511
			# province_id = 969
			# province_id = 2330
			# province_id = 2461
			# province_id = 2971
			# province_id = 407
			# province_id = 3190
			# province_id = 2906
			# province_id = 2923
			# province_id = 2867
			# province_id = 4761
			# province_id = 4751
			# province_id = 1318
			# province_id = 441
			# province_id = 262
			# province_id = 1120
			# province_id = 1034
			# province_id = 4063
			# province_id = 2788
			# province_id = 1086
			# province_id = 547
		}
	}
}

is_not_inland_trade_node_province = {
	custom_trigger_tooltip = {
		tooltip = is_not_inland_trade_node_province_tt
		NOT = { province_id = 4064 }
		NOT = { province_id = 2978 }
		NOT = { province_id = 4370 }
		NOT = { province_id = 1777 }
		NOT = { province_id = 292 }
		NOT = { province_id = 296 }
		NOT = { province_id = 1065 }
		NOT = { province_id = 1058 }
		NOT = { province_id = 4186 }
		NOT = { province_id = 72 }
		NOT = { province_id = 2991 }
		NOT = { province_id = 2751 }
		NOT = { province_id = 1006 }
		NOT = { province_id = 2831 }
		NOT = { province_id = 501 }
		NOT = { province_id = 972 }
		NOT = { province_id = 257 }
		NOT = { province_id = 739 }
		NOT = { province_id = 4511 }
		NOT = { province_id = 969 }
		NOT = { province_id = 2330 }
		NOT = { province_id = 2461 }
		NOT = { province_id = 2971 }
		NOT = { province_id = 407 }
		NOT = { province_id = 3190 }
		NOT = { province_id = 2906 }
		NOT = { province_id = 2923 }
		NOT = { province_id = 2867 }
		NOT = { province_id = 4761 }
		NOT = { province_id = 4751 }
		NOT = { province_id = 1318 }
		NOT = { province_id = 441 }
		NOT = { province_id = 262 }
		NOT = { province_id = 1120 }
		NOT = { province_id = 1034 }
		NOT = { province_id = 4063 }
		NOT = { province_id = 2788 }
		NOT = { province_id = 1086 }
		NOT = { province_id = 547 }
	}
}

has_any_colonist_idea = {
	OR = {
		has_idea = colonial_ventures
		has_idea = additional_colonists
		has_idea = general_colonization_law
		has_idea = pioneer_spirit
		has_idea = manifest_destiny
		has_idea = settling_the_interior
		has_idea = cab_carib_seafaring
		has_idea = lon_conquistadores
		has_idea = nzh_expand_to_the_east
		has_idea = hdr_distant_diplomacy	#Colonist is in the ambition
		has_idea = AUS_outback_stations
		has_idea = NZL_pokarekare_ana	#Colonist is in the ambition
		has_idea = WSI_Colonial_Legacy	#Colonist is in the ambition
		has_idea = asu_colonialism
		has_idea = adu_expeditionary_sentiment
		has_idea = ICE_nationalism	#Colonist is in the ambition
		has_idea = maj_nusa_tenggara
	}
}

has_completed_idea_group_of_category = {
	[[adm_ideas]
		custom_trigger_tooltip = {
			tooltip = has_completed_one_adm_idea_group
			OR = {
				full_idea_group = innovativeness_ideas
				full_idea_group = religious_ideas
				full_idea_group = economic_ideas
				full_idea_group = expansion_ideas
				full_idea_group = administrative_ideas
				full_idea_group = humanist_ideas
				full_idea_group = infrastructure_ideas
			}
		}
	]
	[[dip_ideas]
		custom_trigger_tooltip = {
			tooltip = has_completed_one_dip_idea_group
			OR = {
				full_idea_group = spy_ideas
				full_idea_group = diplomatic_ideas
				full_idea_group = trade_ideas
				full_idea_group = exploration_ideas
				full_idea_group = maritime_ideas
				full_idea_group = influence_ideas
				full_idea_group = court_ideas
			}
		}
	]
	[[mil_ideas]
		custom_trigger_tooltip = {
			tooltip = has_completed_one_mil_idea_group
			OR = {
				full_idea_group = aristocracy_ideas
				full_idea_group = offensive_ideas
				full_idea_group = defensive_ideas
				full_idea_group = quality_ideas
				full_idea_group = quantity_ideas
				full_idea_group = naval_ideas
				full_idea_group = theocracy_gov_ideas
				full_idea_group = indigenous_ideas
				full_idea_group = horde_gov_ideas
				full_idea_group = plutocracy_ideas
				full_idea_group = mercenary_ideas
			}
		}
	]
}

num_of_completed_idea_groups_adm = {
	calc_true_if = {
		desc = num_of_completed_idea_groups_adm_tt
		full_idea_group = innovativeness_ideas
		full_idea_group = religious_ideas
		full_idea_group = economic_ideas
		full_idea_group = expansion_ideas
		full_idea_group = administrative_ideas
		full_idea_group = humanist_ideas
		full_idea_group = infrastructure_ideas
		amount = $amount$
	}
}

num_of_completed_idea_groups_dip = {
	calc_true_if = {
		desc = num_of_completed_idea_groups_dip_tt
		full_idea_group = spy_ideas
		full_idea_group = diplomatic_ideas
		full_idea_group = trade_ideas
		full_idea_group = exploration_ideas
		full_idea_group = maritime_ideas
		full_idea_group = influence_ideas
		full_idea_group = court_ideas
		amount = $amount$
	}
}

num_of_completed_idea_groups_mil = {
	calc_true_if = {
		desc = num_of_completed_idea_groups_mil_tt
		full_idea_group = aristocracy_ideas
		full_idea_group = offensive_ideas
		full_idea_group = defensive_ideas
		full_idea_group = quality_ideas
		full_idea_group = quantity_ideas
		full_idea_group = naval_ideas
		full_idea_group = theocracy_gov_ideas
		full_idea_group = indigenous_ideas
		full_idea_group = horde_gov_ideas
		full_idea_group = plutocracy_ideas
		full_idea_group = mercenary_ideas
		amount = $amount$
	}
}

num_of_completed_idea_groups_by_category = {
	num_of_completed_idea_groups_$type$ = { amount = $amount$ }
}

has_religion_of_increased_opinion_for_scope = {
}

reverse_has_religion_of_increased_opinion_for_scope = {
}

mal_will_accept_offer = {
	$province$ = {
		owner = {
			OR = {
				alliance_with = ROOT
				is_subject_of = ROOT
				has_opinion = {
					who = ROOT
					value = 100
				}
			}
		}
	}
}

mal_very_highly_to_accept_offer = {
	$province$ = {
		owner = {
			has_opinion = {
				who = ROOT
				value = 50
			}
		}
	}
}

mal_might_or_might_not_accept_offer = {
	$province$ = {
		owner = {
			has_opinion = {
				who = ROOT
				value = -50
			}
			NOT = {
				has_opinion = {
					who = ROOT
					value = 50
				}
			}
		}
	}
}

mal_very_likely_to_not_accept_offer = {
	$province$ = {
		owner = {
			NOT = {
				has_opinion = {
					who = ROOT
					value = 50
				}
			}
		}
	}
}

mal_will_never_accept_offer = {
	$province$ = {
		owner = {
			OR = {
				is_rival = ROOT
				is_enemy = ROOT
				NOT = {
					has_opinion = {
						who = ROOT
						value = 100
					}
				}
			}
		}
	}
}

has_any_heir_cult_active = {
}

gained_development_from_building = {
	has_province_flag = built_dev_$building$
}
gained_dev_from_eco_building = {
	has_province_flag = built_eco_dev_$building$
}

gained_development_from_any_building = {
	OR = {
		has_province_flag = built_dev_marketplace
		has_province_flag = built_dev_workshop
		has_province_flag = built_dev_temple
		has_province_flag = built_dev_barracks
		has_province_flag = built_dev_shipyard
		has_province_flag = built_dev_courthouse
		has_province_flag = built_dev_dock
		has_province_flag = built_dev_regimental_camp
		has_province_flag = built_dev_cathedral
		has_province_flag = built_dev_university
		has_province_flag = built_dev_trade_depot
		has_province_flag = built_dev_grand_shipyard
		has_province_flag = built_dev_training_fields
		has_province_flag = built_dev_stock_exchange
		has_province_flag = built_dev_counting_house
		has_province_flag = built_dev_town_hall
		has_province_flag = built_dev_drydock
		has_province_flag = built_dev_conscription_center
		has_province_flag = built_dev_manufactory
	}
}

has_primary_cult = {
	has_country_flag = has_$cult$_as_primary_cult
}

has_a_primary_cult_selected = {
	custom_trigger_tooltip = {
		tooltip = has_a_primary_cult_selected_tt
		has_country_flag = has_selected_a_primary_cult
	}
}

has_better_tech_than_westerns = {
	custom_trigger_tooltip = {
		tooltip = has_better_tech_than_westerns_tt
		NOT = {
			any_country = {
				tech_difference = 1
				technology_group = western
				NOT = { tag = ROOT }
			}
		}
	}
}

has_more_institutions_than_westerns = {
	custom_trigger_tooltip = {
		tooltip = has_more_institutions_than_westerns_tt
		NOT = {
			calc_true_if = {
				all_country = {
					institution_difference = {
						who = ROOT
						value = 1
					}
					technology_group = western
					NOT = { tag = ROOT }
				}
				amount = 1
			}
		}
	}
}

is_not_free_merc_company = {
}

has_free_mercs_trait = {
	OR = {
		has_idea = seasoned_veterans
		has_government_attribute = mercs_do_not_cost_army_professionalism
	}
}

has_not_free_mercs_trait = {
	NOT = { has_idea = seasoned_veterans }
	NOT = { has_government_attribute = mercs_do_not_cost_army_professionalism }
}

mal_target_country_exists_in_region = {
}

mal_owns_provinces_in_region = {
}

province_is_or_accepts_culture = {
	OR = {
		has_owner_culture = yes
		has_owner_accepted_culture = yes
	}
}

#Buddhism is its own can of worms due to the so many aspects of it
#This was one of the few moments where it was almost worth considering putting Buddhism in its own religion group - almost
province_is_buddhist_or_accepts_buddhism = {
}

#Had to make a new scripted trigger or otherwise the conditions looks too cluttered...
province_is_buddhist_or_accepts_buddhism_or_is_dharmic = {

}

province_is_or_accepts_religion_group = { 
	custom_trigger_tooltip = {
		tooltip = province_is_or_accepts_$religion_group$_tt
		OR = {
			AND = {
				religion_group = $religion_group$
				has_owner_religion = yes
			}
			AND = {
				owner = { secondary_religion_group = $religion_group$ }
				OR = {
					religion_group = $religion_group$
					has_owner_religion = yes
				}
			}
		}
	}
}

province_is_or_accepts_religion = {
	custom_trigger_tooltip = {
		tooltip = province_is_or_accepts_$religion$_tt
		OR = {
			AND = {
				religion = $religion$
				has_owner_religion = yes
			}
			AND = {
				owner = { secondary_religion = $religion$ }
				OR = {
					religion = $religion$
					has_owner_religion = yes
				}
			}
		}
	}
}

has_not_any_exploration_ideas = {
	NOT = { has_idea = quest_for_the_new_world }
	NOT = { has_idea = call_of_our_forefathers }
	NOT = { has_idea = tonga_oceanic_empire }
	NOT = { has_idea = samoa_trade }
	NOT = { has_idea = legendary_voyagers }
	NOT = { has_idea_group = ICE_ideas }
}

has_any_exploration_idea = {
	OR = {
		has_idea = quest_for_the_new_world
		has_idea = call_of_our_forefathers
		has_idea = tonga_oceanic_empire
		has_idea = samoa_trade
		has_idea = legendary_voyagers
		has_idea_group = ICE_ideas
	}
}

###HAS ANY TRADE GOODS IMPORTANT FOR THE MANUFACTORIES###
#For Wharf manufactories
has_wharf_trade_goods = {
	OR = {
		trade_goods = salt
		trade_goods = fish
		trade_goods = naval_supplies
	}
}

#For Weapons manufactories
has_weapons_trade_goods = {
	OR = {
		trade_goods = copper
		trade_goods = iron
	}
}

#For Textile manufactories
has_textile_trade_goods = {
	OR = {
		trade_goods = wool
		trade_goods = cloth
		trade_goods = gu_vehicles
		trade_goods = gu_oil
	}
}

#For Plantation manufactories
has_plantation_trade_goods = {
	OR = {
		trade_goods = gu_mushrooms
		trade_goods = gu_hemp
		trade_goods = sugar
		trade_goods = gu_oscypek
		trade_goods = gu_vodka
		trade_goods = gu_beer
	}
}

#For Trade Company manufactories
has_trade_company_trade_goods = {
	OR = {
		trade_goods = gu_stone
		trade_goods = gu_pigs
		trade_goods = gu_fruits
		trade_goods = fur
		trade_goods = gu_sulfur
		trade_goods = cloves
	}
}

#For Farm manufactories
has_farm_trade_goods = {
	OR = {						
		trade_goods = gu_wheat
		trade_goods = gu_cattle
		trade_goods = wine
	}
}

#For Mills manufactories
has_mills_trade_goods = {
	OR = {
		trade_goods = paper
		trade_goods = gu_amber
		trade_goods = gu_lumber
		trade_goods = glass
		trade_goods = gu_ceramics
	}
}

#For special gold trade goods
has_valuable_resource = {
	OR = {
		trade_goods = gold
		trade_goods = gu_euro
	}
}


#country scope
ruler_total_stats = {
	variable_arithmetic_trigger = {
		custom_tooltip = ruler_total_stats_$amount$
		export_to_variable = {
			variable_name = ruler_adm
			value = ADM
			who = ROOT
		}
		export_to_variable = {
			variable_name = ruler_dip
			value = DIP
			who = ROOT
		}
		export_to_variable = {
			variable_name = ruler_mil
			value = MIL
			who = ROOT
		}
		change_variable = {
			which = ruler_adm
			which = ruler_dip
		}
		change_variable = {
			which = ruler_adm
			which = ruler_mil
		}
		check_variable = {
			which = ruler_adm
			value = $amount$
		}
	}
}

ruler_total_stats_target = {
	variable_arithmetic_trigger = {
		custom_tooltip = $custom_tooltip$
		export_to_variable = {
			variable_name = ruler_adm
			value = ADM
			who = $who$
		}
		export_to_variable = {
			variable_name = ruler_dip
			value = DIP
			who = $who$
		}
		export_to_variable = {
			variable_name = ruler_mil
			value = MIL
			who = $who$
		}
		change_variable = {
			which = ruler_adm
			which = ruler_dip
		}
		change_variable = {
			which = ruler_adm
			which = ruler_mil
		}
		check_variable = {
			which = ruler_adm
			value = $amount$
		}
	}
}

heir_total_stats = {
	variable_arithmetic_trigger = {
		custom_tooltip = heir_total_stats_$amount$
		export_to_variable = {
			variable_name = heir_adm_var
			value = heir_adm
			who = ROOT
		}
		export_to_variable = {
			variable_name = heir_dip_var
			value = heir_dip
			who = ROOT
		}
		export_to_variable = {
			variable_name = heir_mil_var
			value = heir_mil
			who = ROOT
		}
		change_variable = {
			which = heir_adm_var
			which = heir_dip_var
		}
		change_variable = {
			which = heir_adm_var
			which = heir_mil_var
		}
		check_variable = {
			which = heir_adm_var
			value = $amount$
		}
	}
}

heir_total_stats_target = {
	variable_arithmetic_trigger = {
		custom_tooltip = $custom_tooltip$
		export_to_variable = {
			variable_name = heir_adm_var
			value = heir_adm
			who = $who$
		}
		export_to_variable = {
			variable_name = heir_dip_var
			value = heir_dip
			who = $who$
		}
		export_to_variable = {
			variable_name = heir_mil_var
			value = heir_mil
			who = $who$
		}
		change_variable = {
			which = heir_adm_var
			which = heir_dip_var
		}
		change_variable = {
			which = heir_adm_var
			which = heir_mil_var
		}
		check_variable = {
			which = heir_adm_var
			value = $amount$
		}
	}
}

consort_total_stats = {
	variable_arithmetic_trigger = {
		custom_tooltip = consort_total_stats_$amount$
		export_to_variable = {
			variable_name = consort_adm_var
			value = consort_adm
			who = ROOT
		}
		export_to_variable = {
			variable_name = consort_dip_var
			value = consort_dip
			who = ROOT
		}
		export_to_variable = {
			variable_name = consort_mil_var
			value = consort_mil
			who = ROOT
		}
		change_variable = {
			which = consort_adm_var
			which = consort_dip_var
		}
		change_variable = {
			which = consort_adm_var
			which = consort_mil_var
		}
		check_variable = {
			which = consort_adm_var
			value = $amount$
		}
	}
}

consort_total_stats_target = {
	variable_arithmetic_trigger = {
		custom_tooltip = $custom_tooltip$
		export_to_variable = {
			variable_name = consort_adm_var
			value = consort_adm
			who = $who$
		}
		export_to_variable = {
			variable_name = consort_dip_var
			value = consort_dip
			who = $who$
		}
		export_to_variable = {
			variable_name = consort_mil_var
			value = consort_mil
			who = $who$
		}
		change_variable = {
			which = consort_adm_var
			which = consort_dip_var
		}
		change_variable = {
			which = consort_adm_var
			which = consort_mil_var
		}
		check_variable = {
			which = consort_adm_var
			value = $amount$
		}
	}
}

num_of_ruler_traits = {
	calc_true_if = {
		desc = num_of_ruler_traits_tt
		ruler_has_personality = just_personality
		ruler_has_personality = righteous_personality
		ruler_has_personality = tolerant_personality
		ruler_has_personality = kind_hearted_personality
		ruler_has_personality = free_thinker_personality
		ruler_has_personality = well_connected_personality
		ruler_has_personality = calm_personality
		ruler_has_personality = careful_personality
		ruler_has_personality = secretive_personality
		ruler_has_personality = intricate_web_weaver_personality
		ruler_has_personality = fertile_personality
		ruler_has_personality = well_advised_personality
		ruler_has_personality = benevolent_personality
		ruler_has_personality = zealot_personality 
		ruler_has_personality = pious_personality
		ruler_has_personality = lawgiver_personality
		ruler_has_personality = midas_touched_personality
		ruler_has_personality = incorruptible_personality
		ruler_has_personality = architectural_visionary_personality
		ruler_has_personality = scholar_personality
		ruler_has_personality = entrepreneur_personality
		ruler_has_personality = industrious_personality
		ruler_has_personality = expansionist_personality
		ruler_has_personality = charismatic_negotiator_personality
		ruler_has_personality = silver_tongue_personality
		ruler_has_personality = conqueror_personality
		ruler_has_personality = tactical_genius_personality
		ruler_has_personality = bold_fighter_personality
		ruler_has_personality = strict_personality
		ruler_has_personality = inspiring_leader_personality
		ruler_has_personality = martial_educator_personality
		ruler_has_personality = navigator_personality
		ruler_has_personality = fierce_negotiator_personality
		ruler_has_personality = babbling_buffoon_personality
		ruler_has_personality = embezzler_personality
		ruler_has_personality = infertile_personality
		ruler_has_personality = drunkard_personality
		ruler_has_personality = sinner_personality
		ruler_has_personality = greedy_personality
		ruler_has_personality = cruel_personality
		ruler_has_personality = naive_personality
		ruler_has_personality = craven_personality
		ruler_has_personality = loose_lips_personality
		ruler_has_personality = obsessive_perfectionist_personality
		ruler_has_personality = malevolent_personality
		ruler_has_personality = immortal_personality
		ruler_has_personality = legendary_pirate_personality
		ruler_has_personality = reformist_personality
		ruler_has_personality = legendary_conqueror_personality
		ruler_has_personality = great_engineer_personality
		ruler_has_personality = patron_of_arts_personality
		amount = $amount$
	}
}

has_points_for_livonian_military_monarchy = {
	check_variable = {
		which = liv_mil
		value = 5
	}
}
has_points_for_livonian_naval_monarchy = {
	check_variable = {
		which = liv_dip
		value = 5
	}
}
has_points_for_livonian_trade_monarchy = {
	check_variable = {
		which = liv_adm
		value = 3
	}
	check_variable = {
		which = liv_dip
		value = 3
	}
}
has_points_for_livonian_constitutional_monarchy = {
	is_variable_equal = {
		which = liv_adm
		value = 3
	}
}
has_points_for_livonian_theocratic_monarchy = {
	check_variable = {
		which = liv_adm
		value = 3
	}
	check_variable = {
		which = liv_mil
		value = 3
	}
}
has_points_for_livonian_elective_monarchy = {
	check_variable = {
		which = liv_dip
		value = 3
	}
}
has_points_for_livonian_diplomatic_monarchy = {
	check_variable = {
		which = liv_dip
		value = 4
	}
}
has_points_for_livonian_administrative_monarchy = {
	check_variable = {
		which = liv_adm
		value = 5
	}
}
has_points_for_livonian_mercenary_monarchy = {
	check_variable = {
		which = liv_mil
		value = 3
	}
}
has_points_for_livonian_admiral_monarchy = {
	check_variable = {
		which = liv_dip
		value = 4
	}
}
has_points_for_livonian_naval_controlled_monarchy = {
	check_variable = {
		which = liv_dip
		value = 3
	}
	check_variable = {
		which = liv_mil
		value = 3
	}
}
has_points_for_livonian_general_controlled_monarchy = {
	check_variable = {
		which = liv_mil
		value = 4
	}
}
has_points_for_livonian_absolute_monarchy = {
	check_variable = {
		which = liv_adm
		value = 4
	}
}
has_points_for_livonian_enlightened_monarchy = {
	is_variable_equal = {
		which = liv_adm
		value = 2
	}
	is_variable_equal = {
		which = liv_dip
		value = 2
	}
	is_variable_equal = {
		which = liv_mil
		value = 2
	}
}

has_points_for_livonian_monarchy = {
	has_points_for_$government_reform$ = yes
}

is_allowed_to_recruit_mercenaries = {
	custom_trigger_tooltip = {
		tooltip = is_allowed_to_recruit_mercenaries_tt
		NOT = { has_country_modifier = dan_sca_refocus_on_personal_armies }
	}
}

has_no_religion_specific_government_available = {
}

#Province scope
is_flatland = {
	custom_trigger_tooltip = {
		tooltip = is_flatland_tt
		OR = {
			has_terrain = farmlands
			has_terrain = grasslands
			has_terrain = steppe
			has_terrain = savannah
			has_terrain = drylands
			has_terrain = coastal_desert
			has_terrain = desert
			has_terrain = coastline
		}
	}
}

is_eyalet_trigger = {
	custom_trigger_tooltip = {
		tooltip = is_eyalet_trigger_tt
		OR = {
			is_subject_of_type = eyalet
			is_subject_of_type = core_eyalet
		}
	}
}

has_strong_mil_national_ideas = {
	custom_trigger_tooltip = {
		tooltip = has_strong_mil_national_ideas_tt
	}
}

has_any_active_incomplete_idea_group_of_category = {
    [[adm_ideas]
        custom_trigger_tooltip = {
            tooltip = has_any_active_incomplete_idea_group_of_category_adm
            OR = {
                AND = { has_idea_group = innovativeness_ideas NOT = { full_idea_group = innovativeness_ideas } }
                AND = { has_idea_group = religious_ideas      NOT = { full_idea_group = religious_ideas } }
                AND = { has_idea_group = economic_ideas       NOT = { full_idea_group = economic_ideas } }
                AND = { has_idea_group = expansion_ideas      NOT = { full_idea_group = expansion_ideas } }
                AND = { has_idea_group = administrative_ideas NOT = { full_idea_group = administrative_ideas } }
                AND = { has_idea_group = humanist_ideas       NOT = { full_idea_group = humanist_ideas } }
                AND = { has_idea_group = infrastructure_ideas NOT = { full_idea_group = infrastructure_ideas } }
            }
        }
    ]
    [[dip_ideas]
        custom_trigger_tooltip = {
            tooltip = has_any_active_incomplete_idea_group_of_category_dip
            OR = {
                AND = { has_idea_group = spy_ideas         	NOT = { full_idea_group = spy_ideas } }
                AND = { has_idea_group = diplomatic_ideas  	NOT = { full_idea_group = diplomatic_ideas } }
                AND = { has_idea_group = trade_ideas       	NOT = { full_idea_group = trade_ideas } }
                AND = { has_idea_group = exploration_ideas 	NOT = { full_idea_group = exploration_ideas } }
                AND = { has_idea_group = maritime_ideas    	NOT = { full_idea_group = maritime_ideas } }
                AND = { has_idea_group = influence_ideas   	NOT = { full_idea_group = influence_ideas } }
                AND = { has_idea_group = court_ideas       	NOT = { full_idea_group = court_ideas } }
            }
        }
    ]
    [[mil_ideas]
        custom_trigger_tooltip = {
            tooltip = has_any_active_incomplete_idea_group_of_category_mil
            OR = {
                AND = { has_idea_group = aristocracy_ideas       	NOT = { full_idea_group = aristocracy_ideas } }
                AND = { has_idea_group = offensive_ideas       		NOT = { full_idea_group = offensive_ideas } }
                AND = { has_idea_group = defensive_ideas       		NOT = { full_idea_group = defensive_ideas } }
                AND = { has_idea_group = quality_ideas           	NOT = { full_idea_group = quality_ideas } }
                AND = { has_idea_group = quantity_ideas             NOT = { full_idea_group = quantity_ideas } }
                AND = { has_idea_group = theocracy_gov_ideas   		NOT = { full_idea_group = theocracy_gov_ideas } }
                AND = { has_idea_group = indigenous_ideas      	    NOT = { full_idea_group = indigenous_ideas } }
                AND = { has_idea_group = horde_gov_ideas       	    NOT = { full_idea_group = horde_gov_ideas } }
                AND = { has_idea_group = plutocracy_ideas        	NOT = { full_idea_group = plutocracy_ideas } }
                AND = { has_idea_group = mercenary_ideas        	NOT = { full_idea_group = mercenary_ideas } }
                AND = { has_idea_group = naval_ideas				NOT = { full_idea_group = naval_ideas } }
            }
        }
    ]
}

has_unlocked_church_aspect = {
	has_country_flag = unlocked_church_aspect_$church_aspect$
}

has_increased_trade_goods_discovery = {
	has_country_flag = increased_trade_goods_discovery_$trade_goods$
}

has_stab_reduction_from_dip_action_modifier = {
	full_idea_group = diplomatic_ideas
}

is_not_eligible_for_trade_good_grain = {
}
is_not_eligible_for_trade_good_wine = {
}
is_not_eligible_for_trade_good_wool = {
}
is_not_eligible_for_trade_good_cloth = {
}
is_not_eligible_for_trade_good_fish = {
	NOT = { has_port = yes }
}
is_not_eligible_for_trade_good_fur = {
}
is_not_eligible_for_trade_good_salt = {
}
is_not_eligible_for_trade_good_naval_supplies = {
}
is_not_eligible_for_trade_good_copper = {
}
is_not_eligible_for_trade_good_gold = {
}
is_not_eligible_for_trade_good_iron = {
}
is_not_eligible_for_trade_good_slaves = {
}
is_not_eligible_for_trade_good_ivory = {
}
is_not_eligible_for_trade_good_tea = {
}
is_not_eligible_for_trade_good_chinaware = {
}
is_not_eligible_for_trade_good_spices = {
}
is_not_eligible_for_trade_good_coffee = {
}
is_not_eligible_for_trade_good_cotton = {
}
is_not_eligible_for_trade_good_sugar = {
}
is_not_eligible_for_trade_good_tobacco = {
}
is_not_eligible_for_trade_good_cocoa = {
}
is_not_eligible_for_trade_good_silk = {
}
is_not_eligible_for_trade_good_dyes = {
}
is_not_eligible_for_trade_good_tropical_wood = {
}
is_not_eligible_for_trade_good_livestock = {
}
is_not_eligible_for_trade_good_incense = {
}
is_not_eligible_for_trade_good_glass = {
}
is_not_eligible_for_trade_good_paper = {
}
is_not_eligible_for_trade_good_gems = {
}
is_not_eligible_for_trade_good_coal = {
	always = yes	#Should never be available
}
is_not_eligible_for_trade_good_cloves = {
}
is_not_eligible_for_trade_good_unknown = {
	always = yes
}

has_chance_scaling_cost = {
	always = no
}
is_eligible_for_trade_good = {
	NOT = { trade_goods = $trade_goods$ }
	NOT = { is_not_eligible_for_trade_good_$trade_goods$ = yes }
}

has_updated_culture = {
	has_global_flag = updated_$culture$_flag
}

is_eligible_for_statists_monarchist_events = {
	NOT = { has_government_attribute = theocratic_monarchy_mechanic }
	NOT = { has_government_attribute = has_co_rulership }
}

has_modifier_locking_military_tier = {
	has_country_modifier = new_order_regiment_mobilized_modifier
}

has_not_modifier_locking_military_tier = {
	custom_trigger_tooltip = {
		tooltip = has_modifier_locking_military_tier_tt
		NOT = { has_modifier_locking_military_tier = yes }
	}
}

has_not_locked_first_tier_reform = {
	NOT = { has_reform = free_city }
	NOT = { has_reform = trading_city }
	NOT = { has_reform = colonial_government }
	NOT = { has_reform = crown_colony_government }
	NOT = { has_reform = private_enterprise_colony_government }
	NOT = { has_reform = self_governing_colony_government }
	NOT = { has_reform = trade_company_government }
	NOT = { has_reform = great_mongol_state_reform }	
}

num_of_forced_converted_countries = {
	custom_trigger_tooltip = {
		tooltip = HAS_FORCE_CONVERTED_$amount$_COUNTRIES_TT
		check_variable = {
			which = num_of_forced_conversions
			value = $amount$
		}
	}
}

num_of_converted_provinces = {
	custom_trigger_tooltip = {
		tooltip = HAS_CONVERTED_$amount$_PROVINCES_TT
		check_variable = {
			which = num_converted_religion
			value = $amount$
		}
	}
}

trading_policy_or_upgraded_policy_in_node = {
	OR = {
		trading_policy_in_node = {
			node = $node$
			policy = $policy$
		}
		trading_policy_in_node = {
			node = $node$
			policy = $policy$_upgraded
		}
	}
}

has_max_monthly_monarch_power = {
	if = {
		limit = {
			#Promote Advisors - +2
			has_dlc = "Cradle of Civilization"
			#National Focus - +2
			has_dlc = "Res Publica"
			has_dlc = "Common Sense"
		}
		monthly_$type$ = 18
	}
	else_if = {
		limit = {
			OR = {
				has_dlc = "Cradle of Civilization"
				has_dlc = "Res Publica"
				has_dlc = "Common Sense"
			}
		}
		monthly_$type$ = 16
	}
	else = {
		monthly_$type$ = 14
	}
}

has_high_monthly_monarch_power = {
	if = {
		limit = {
			#Promote Advisors - +2
			has_dlc = "Cradle of Civilization"
			#National Focus - +2
			has_dlc = "Res Publica"
			has_dlc = "Common Sense"
		}
		monthly_$type$ = 14
	}
	else_if = {
		limit = {
			OR = {
				has_dlc = "Cradle of Civilization"
				has_dlc = "Res Publica"
				has_dlc = "Common Sense"
			}
		}
		monthly_$type$ = 12
	}
	else = {
		monthly_$type$ = 10
	}
}

has_medium_monthly_monarch_power = {
	if = {
		limit = {
			#Promote Advisors - +2
			has_dlc = "Cradle of Civilization"
			#National Focus - +2
			has_dlc = "Res Publica"
			has_dlc = "Common Sense"
		}
		monthly_$type$ = 12
	}
	else_if = {
		limit = {
			OR = {
				has_dlc = "Cradle of Civilization"
				has_dlc = "Res Publica"
				has_dlc = "Common Sense"
			}
		}
		monthly_$type$ = 10
	}
	else = {
		monthly_$type$ = 8
	}
}

has_defender_of_faith_religion = {
	custom_trigger_tooltip = {
		tooltip = has_defender_of_faith_religion_tt
		OR = {
			religion_group = communism_group
			religion_group = liberalism_group
			religion_group = conservatism_group
			religion_group = socialism_group
			religion_group = populism_group
		}
	}
}
has_any_ongoing_construction = {
	custom_trigger_tooltip = {
		tooltip = has_any_ongoing_construction_tt
		OR = {
			has_construction = building
			has_construction = core
			has_construction = culture
			has_construction = great_project
			has_construction = canal
			has_construction = missionary
			has_construction = state_house
		}
		
	}
}

total_non_estate_disasters_completed = {
	custom_trigger_tooltip = {
		tooltip = total_non_estate_disasters_completed_$value$_tt
		check_variable = {
			which = total_disasters_completed_counter
			value = $value$
		}
	}
}

num_of_battles = {
	custom_trigger_tooltip = {
		tooltip = has_won_at_least_$amount$_battles #in case of adding a new number, localize
		check_variable = {
			which = num_of_battles_won_var
			value = $amount$
		}
	}
}

num_of_wars = {
	custom_trigger_tooltip = {
		tooltip = has_won_at_least_$amount$_wars #in case of adding a new number, localize
		check_variable = {
			which = num_of_wars_won_var
			value = $amount$
		}
	}
}

num_of_provinces_developed = {
	custom_trigger_tooltip = {
		tooltip = has_developed_at_least_$amount$_provinces
		check_variable = {
			which = num_of_times_developed
			value = $amount$
		}
	}
}

has_had_disease_trigger = {
	custom_trigger_tooltip = {
		tooltip = SUN_has_had_smallpox_tt
		has_province_flag = had_smallpox_at_one_point
		NOT = { has_province_modifier = inc_smallpox_outbreak }
	}
}

colonial_territory_trigger = {
	custom_trigger_tooltip = {
		tooltip = SUN_colonial_territory_tt
		owner = {
			is_colonial_empire_trigger = yes
		}
	}
}

colonial_territory_trigger_on_action = {
	custom_trigger_tooltip = {
		tooltip = SUN_colonial_territory_tt
		FROM = {
			is_colonial_empire_trigger = yes
		}
	}
}
is_or_was_tatar_nation = {
}

is_or_was_mongol_nation = {

}

is_or_was_moghulistan_nation = {

}