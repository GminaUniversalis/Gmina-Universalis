#Estate Privilege on_action effects are in 01_scripted_effects_for_estates.txt

initialize_schools_effect = { #Used in on_startup on_action

}

on_new_monarch_effect = {
	
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		every_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		every_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}

	if = {
		limit = { has_government_attribute = absolutism_reduction_on_ruler_death }
		add_absolutism = -60
	}

	if = {
		limit = {
			has_government_attribute = theocratic_monarchy_mechanic
		}
		#Setting it to 0
		change_statists_vs_orangists = -10
		change_statists_vs_orangists = 1
		if = {
			limit = { has_ruler_flag = monarchistic_heir }
			change_statists_vs_orangists = 0.25
		}
		if = {
			limit = { has_ruler_flag = theocratic_heir }
			change_statists_vs_orangists = -0.25
		}
	}
	if = {
		limit = {
			OR = {
				has_government_attribute = absolutism_reduction_on_ruler_death
				has_government_attribute = has_limited_terms
			}
		}
		set_variable = {
			which = election_term
			value = 1
		}
	}
}

battle_cult_spreading_effect = {

}

crimean_succession_effect = {
	
}

slesvig_question_effect = {

}

succession_culture_religion_effect = {
	if = {
		limit = {
			has_regency = no
			NOT = { has_country_flag = had_culture_religion_reaction_event_flag }
			OR = {
				NOT = { ruler_culture = ROOT }
				NOT = { ruler_religion = ROOT }
			}
		}
		set_country_flag = had_culture_religion_reaction_event_flag #Note: Cleared in the event below, all future effects from ruler culture/religion are gated behind this flag being cleared.
		country_event = { id = culture_religion_events.2 days = 75 random = 7 }
	}
}

sheik_ul_islam_effect = {
	if = {
		limit = {
			has_dlc = "Cradle of Civilization"
			NOT = { has_country_flag = had_sheikh_ul_islam_event } #Cleared by the event itself. Avoids event spam if multiple quick successions
			uses_piety = yes
			num_of_cities = 20
			government_rank = 2
			has_religious_school = yes
			government = monarchy
			NOT = { has_reform = steppe_horde }
		}
		set_country_flag = had_sheikh_ul_islam_event
		country_event = { id = muslim_school_events.2 days = 45 random = 7 } #New Grand Mufti/Sheik-ul-Islam
	}
}

ambrosian_republic_effect = {

}

hab_remove_mission_mods_if_not_emperor_effect = {

}

thu_remain_von_wettin_effect = {
	
}

ladislaus_postumus_heir_died_effect = {
	
}

ladislaus_postumus_king_died_effect = {
	
}

ladislaus_postumus_union_effect = {
	
}

burgundian_inheritance_start_effect = {
	
}

joan_de_trastamara_king_died_effect = {
	
}

joan_de_trastamara_heir_died_effect = {
	
}

on_province_owner_change_government_effect = {
	if = {
		limit = {
			OR = {
				has_province_modifier = wine_bonus_prod
				has_province_modifier = grain_bonus_prod
			}
			FROM = { has_reform = monastic_breweries_reform }
			NOT = { owner = { has_reform = monastic_breweries_reform } }
		}
		remove_province_modifier = wine_bonus_prod
		remove_province_modifier = grain_bonus_prod
	}
	if = {
		limit = {
			NOT = {
				OR = {
					has_province_modifier = wine_bonus_prod
					has_province_modifier = grain_bonus_prod
				}
			}
			owner = { has_reform = monastic_breweries_reform }
			NOT = { FROM = { has_reform = monastic_breweries_reform } }
		}
		hidden_effect = {
			if = {
				limit = {
					trade_goods = wine
				}
				add_province_modifier = { 
					name = wine_bonus_prod
					duration = -1
					hidden = yes
				}
			}
			if = {
				limit = {
					trade_goods = gu_wheat
				}
				add_province_modifier = { 
					name = grain_bonus_prod
					duration = -1
					hidden = yes
				}
			}
		}
	}

	if = {
		limit = {
			has_province_modifier = grain_vodka_bonus_prod
			FROM = { has_government_attribute = extra_trade_goods_from_grain }
			NOT = { owner = { has_government_attribute = extra_trade_goods_from_grain } }
		}
		remove_province_modifier = grain_vodka_bonus_prod
	}
	if = {
		limit = {
			NOT = { has_province_modifier = grain_vodka_bonus_prod }
			owner = { has_government_attribute = extra_trade_goods_from_grain }
			NOT = { FROM = { has_government_attribute = extra_trade_goods_from_grain } }
			trade_goods = gu_wheat
		}
		hidden_effect = {
			add_province_modifier = { 
				name = grain_vodka_bonus_prod
				duration = -1
				hidden = yes
			}
		}
	}
	if = {
		limit = {
			has_province_modifier = naval_supplies_bonus_prod
			FROM = { has_government_attribute = extra_trade_goods_from_naval_supplies }
			NOT = { owner = { has_government_attribute = extra_trade_goods_from_naval_supplies } }
		}
		remove_province_modifier = naval_supplies_bonus_prod
	}
	if = {
		limit = {
			NOT = { has_province_modifier = naval_supplies_bonus_prod }
			owner = { has_government_attribute = extra_trade_goods_from_naval_supplies }
			NOT = { FROM = { has_government_attribute = extra_trade_goods_from_naval_supplies } }
		}
		hidden_effect = {
			if = {
				limit = {
					trade_goods = naval_supplies
				}
				add_province_modifier = { 
					name = naval_supplies_bonus_prod
					duration = -1
					hidden = yes
				}
			}
		}
	}

	if = {
		limit = {
			owner = { has_government_attribute = temples_modifier }
			has_tax_building_trigger = yes
		}
		add_province_modifier = {
			name = gov_expanded_temple_rights_mod
			duration = -1
		}
	}
	if = {
		limit = {
			owner = { has_government_attribute = more_25_tax_in_true_faith_provinces }
			has_owner_religion = yes
		}
		add_province_modifier = {
			name = ottoman_siyasah_tax_reform_tax
			duration = -1
		}
	}
	if = {
		limit = {
			owner = { has_government_attribute = more_15_manpower_in_heathen_provinces }
			NOT = { religion_group = owner }
		}
		add_province_modifier = {
			name = ottoman_siyasah_tax_reform_manpower
			duration = -1
		}
	}
	if = {
		limit = {
			owner = { has_government_attribute = improved_military_buildings }
		}
		if = {
			limit = { has_building = barracks }
			add_province_modifier = {
				name = wei_suo_system_reform_barracks_modifier
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = { has_building = training_fields }
			add_province_modifier = {
				name = wei_suo_system_reform_training_fields_modifier
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = { has_building = regimental_camp }
			add_province_modifier = {
				name = wei_suo_system_reform_regimental_camp_modifier
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = { has_building = conscription_center }
			add_province_modifier = {
				name = wei_suo_system_reform_conscription_center_modifier
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = { has_building = soldier_households }
			add_province_modifier = {
				name = wei_suo_system_reform_soldier_households_modifier
				duration = -1
				hidden = yes
			}
		}
	}
	if = {
		limit = {
			has_port = yes
			owner = {
				has_government_attribute = cheaper_coastal_province_core
			}
		}
		add_province_modifier = {
			name = gov_coastal_government
			duration = -1
		}
	}
	if = {
		limit = {
			has_owner_culture = yes
			owner = { has_government_attribute = can_recruit_banners_from_primary_culture_provinces }
		}
		add_province_modifier = { name = mongol_banners_location duration = -1 hidden = yes }
	}
}

on_province_religion_changed_effect = {
	on_province_religion_converted_estate_privileges_effect = yes

}

on_province_religion_converted_effect = {
	if = {
		limit = { owner = { has_government_attribute = gain_devotion_from_conversions } }
		owner = { add_devotion = 0.2 }
	}
	if = {
		limit = { owner = { has_government_attribute = theocratic_monarchy_mechanic } }
		owner = { change_statists_vs_orangists = -0.01 }
	}

}

on_trade_good_changed_government_effect = {
	if = {
		limit = { owner = { has_government_attribute = extra_trade_goods_from_grain } }
		if = {
			limit = { trade_goods = gu_wheat }
			add_province_modifier = { 
				name = grain_vodka_bonus_prod
				duration = -1
				hidden = yes
			}
		}
		else = { remove_province_modifier = grain_vodka_bonus_prod }
	}
	else = { remove_province_modifier = grain_vodka_bonus_prod }
	if = {
		limit = {
			owner = { has_government_attribute = extra_trade_goods_from_naval_supplies }
		}
		if = {
			limit = {
				trade_goods = naval_supplies
			}
			add_province_modifier = { 
				name = naval_supplies_bonus_prod
				duration = -1
				hidden = yes
			}
		}
		else = {
			remove_province_modifier = naval_supplies_bonus_prod
		}
	}
	else = {
		remove_province_modifier = naval_supplies_bonus_prod
	}
	
}

on_battle_won_unit_effect = {
	if = {
		limit = {
			unit_owner = {
				has_government_mechanic = divine_authority_mechanic
			}
			is_ruler_commanding_unit = yes
		}
		unit_owner = {
			set_variable = {
				which = monarch_kill
				which = land_units_killed
			}
			while = {
				limit = {
					check_variable = {
						which = monarch_kill
						value = 100
					}
				}
				change_variable = {
					which = monarch_kill
					value = -100
				}
				add_government_power = { 
					mechanic_type = divine_authority_mechanic 
					power_type = divine_authority
					value = 0.01
				}
			}
		}
	}
	if = {
        limit = {
            unit_owner = {
                has_government_attribute = orangist_cause
				is_orangists_in_power = yes
            }
            is_ruler_commanding_unit = yes
        }
        unit_owner = {
			change_variable = {
				which = NEDOrangistCauseVar
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = NEDOrangistCauseVar
						value = 25
					}
				}
				add_ruler_personality = orangist_stadholder_personality
			}
        }
	}
	if = {
		limit = {
			unit_owner = {
				has_government_mechanic = ottoman_decadence_mechanic
				check_variable = {	#Check so overrun will not decrease Decadence
					which = land_units_lost
					value = 1
				}
			}
			is_ruler_commanding_unit = yes
		}
		unit_owner = {
			set_variable = {
				which = monarch_kill
				which = land_units_killed
			}
			set_variable = {
				which = monarch_losses
				which = land_units_lost
			}
			divide_variable = {
				which = monarch_kill
				value = 1000
			}
			divide_variable = {
				which = monarch_losses
				value = 1000
			}
			change_variable = {	#in order to avoid division by 0
				which = monarch_losses
				value = 1
			}
			divide_variable = {
				which = monarch_kill
				which = monarch_losses
			}
			while = {
				limit = {
					check_variable = {
						which = monarch_kill
						value = 1
					}
				}
				change_variable = {
					which = monarch_kill
					value = -1
				}
				add_government_power = { 
					mechanic_type = ottoman_decadence_mechanic 
					power_type = ottoman_decadence
					value = -0.1
				}
			}
			multiply_variable = {
				which = monarch_kill
				value = 10
			}
			while = {
				limit = {
					check_variable = {
						which = monarch_kill
						value = 1
					}
				}
				change_variable = {
					which = monarch_kill
					value = -1
				}
				add_government_power = { 
					mechanic_type = ottoman_decadence_mechanic 
					power_type = ottoman_decadence
					value = -0.01
				}
			}
		}
	}
}

on_battle_lost_unit_effect = {
	if = {
		limit = {
			unit_owner = {
				has_government_mechanic = divine_authority_mechanic
			}
			is_ruler_commanding_unit = yes
		}
		unit_owner = {
			set_variable = {
				which = monarch_kill
				which = land_units_killed
			}
			while = {
				limit = {
					check_variable = {
						which = monarch_kill
						value = 100
					}
				}
				change_variable = {
					which = monarch_kill
					value = -100
				}
				add_government_power = { 
					mechanic_type = divine_authority_mechanic 
					power_type = divine_authority
					value = 0.01
				}
			}
		}
	}
	if = {
        limit = {
            unit_owner = {
                has_government_attribute = orangist_cause
				is_orangists_in_power = yes
            }
            is_ruler_commanding_unit = yes
        }
	}
	if = {
		limit = {
			unit_owner = {
				has_government_mechanic = ottoman_decadence_mechanic
				check_variable = {	#Check so overrun will not decrease Decadence
					which = land_units_killed
					value = 1
				}
			}
			is_ruler_commanding_unit = yes
		}
		unit_owner = {
			set_variable = {
				which = monarch_kill
				which = land_units_killed
			}
			set_variable = {
				which = monarch_losses
				which = land_units_lost
			}
			divide_variable = {
				which = monarch_kill
				value = 1000
			}
			divide_variable = {
				which = monarch_losses
				value = 1000
			}
			change_variable = {	#in order to avoid division by 0
				which = monarch_kill
				value = 1
			}
			divide_variable = {
				which = monarch_losses
				which = monarch_kill
			}
			while = {
				limit = {
					check_variable = {
						which = monarch_losses
						value = 1
					}
				}
				change_variable = {
					which = monarch_losses
					value = -1
				}
				add_government_power = { 
					mechanic_type = ottoman_decadence_mechanic 
					power_type = ottoman_decadence
					value = 0.1
				}
			}
			multiply_variable = {
				which = monarch_losses
				value = 10
			}
			while = {
				limit = {
					check_variable = {
						which = monarch_losses
						value = 1
					}
				}
				change_variable = {
					which = monarch_losses
					value = -1
				}
				add_government_power = { 
					mechanic_type = ottoman_decadence_mechanic 
					power_type = ottoman_decadence
					value = 0.01
				}
			}
		}
	}
}

on_battle_won_country_effect = {
	if = {
		limit = {
			ROOT = { has_government_attribute = manpower_from_defeating_armies }
		}
		ROOT = {
			set_variable = {
				which = land_units_killed_var
				which = land_units_killed
			}
			multiply_variable = {
				which = land_units_killed_var
				value = 0.1
			}
			while = {
				limit = {
					check_variable = {
						which = land_units_killed_var
						value = 1000
					}
				}
				subtract_variable = {
					which = land_units_killed_var
					value = 1000
				}
				add_manpower = 1
			}
			multiply_variable = {
				which = land_units_killed_var
				value = 1000
			}
			while = {
				limit = {
					check_variable = {
						which = land_units_killed_var
						value = 1000
					}
				}
				subtract_variable = {
					which = land_units_killed_var
					value = 1000
				}
				add_manpower = 0.001
			}
		}
	}
}

on_battle_ended_effect = {
	ROOT = {
		change_variable = {
			which = total_land_units_killed
			which = land_units_killed
		}
		change_variable = {
			which = total_land_units_lost
			which = land_units_lost
		}
		change_variable = {
			which = total_naval_units_killed
			which = naval_units_killed
		}
		change_variable = {
			which = total_naval_units_lost
			which = naval_units_lost
		}
	}
}

#Province effect
judaism_on_province_culture_converted_effect = {

}

on_religion_change_effect = {
	###removes catholic modifiers
		remove_country_modifier = counter_reformation
		remove_country_modifier = the_statue_in_restraint_of_appeals
		remove_country_modifier = revocation_of_restraint_of_appeals
		remove_country_modifier = bavarian_jesuits
		remove_country_modifier = the_societas_jesu
		remove_country_modifier = the_declaration_of_indulgence
		remove_country_modifier = de_heretico_comburendo
		remove_country_modifier = the_conventicle_act

	if = {
		limit = {
			has_heir = yes
		}
		set_heir_religion = ROOT
	}
	if = {
		limit = {
			has_regency = no
		}
		set_ruler_religion = ROOT
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			has_consort = yes
		}
		set_consort_religion = ROOT
	}
	
	add_country_modifier = {
		name = recently_changed_religion_dummy
		duration = 10
		hidden = yes
	}
	
}

#Country effect
judaism_on_religion_change_effect = {
	
}

on_culture_demoted_effect_free_slot_removal = {

}

on_culture_demoted_effect_remove_all_free_slots = {

}

#Country effect
on_culture_demoted_effect = {

}

#Country effect
judaism_on_culture_country_effect = {

}

#Province effect
imperial_modifiers_on_province_change_culture_or_change_owner_effect = {

}

#Country effect
imperial_modifiers_on_culture_country_effect = {
	
}

#Country effect
imperial_modifiers_on_primary_culture_change_effect = {
	
}

on_war_declaration_effect = {
}

remove_all_age_of_discovery_modifiers = {

}
remove_all_age_of_reformation_modifiers = {

}
remove_all_age_of_absolutism_modifiers = {

}
remove_all_age_of_revolution_modifiers = {
	#if = {
	#	limit = {
	#		NOT = { current_age = age_of_revolutions }
	#	}
	#}
	#Empty as there are no modifiers specific for this age
}

set_age_passed_global_flag = {
	if = {
		limit = {
			not = { current_age = age_of_discovery }
			or = {
				current_age = age_of_reformation
				current_age = age_of_absolutism
				current_age = age_of_revolutions
			}
		}
		set_global_flag = age_of_discovery_passed
	}
	if = {
		limit = {
			has_global_flag = age_of_discovery_passed
			not = { current_age = age_of_reformation }
			or = {
				current_age = age_of_absolutism
				current_age = age_of_revolutions
			}
		}
		set_global_flag = age_of_reformation_passed
	}
	if = {
		limit = {
			has_global_flag = age_of_discovery_passed
			has_global_flag = age_of_reformation_passed
			not = { current_age = age_of_absolutism }
			current_age = age_of_revolutions
		}
		set_global_flag = age_of_absolutism_passed
	}
	if = {
		limit = {
			has_global_flag = age_of_discovery_passed
			has_global_flag = age_of_reformation_passed
			has_global_flag = age_of_absolutism_passed
			not = { current_age = age_of_revolutions }
		}
		set_global_flag = age_of_revolutions_passed
	}
}

remove_all_age_timed_modifiers = {
	remove_all_age_of_discovery_modifiers = yes
	remove_all_age_of_reformation_modifiers = yes
	remove_all_age_of_absolutism_modifiers = yes
	remove_all_age_of_revolution_modifiers = yes
	# Generic ones
	# if = { 
	# 	limit = { has_country_modifier = jap_stability_edo_period_modifier }
	# 	remove_country_modifier = jap_stability_edo_period_modifier 
	# }
}

add_country_modifier_for_age = {
	if = {
		limit = {
			NOT = { has_global_flag = $age$_passed }
		}
		add_country_modifier = {
			name = $name$
			duration = -1
			desc = until_end_of_$age$_desc
		}
	}
	[[else]
		else = {
			$else$
		}
	]
}

on_parliament_abolished_effect = {
	custom_tooltip = on_parliament_abolished_effect_tt
	hidden_effect = {

	}
}

set_parliament_action_flag = {
	hidden_effect = {
		set_country_flag = $parliament_action$_flag
	}
}

on_harmonized_effect = {
	if = {
		limit = {
			has_government_attribute = full_loyalty_on_harmonization
		}
		add_estate_loyalty = {
			estate = estate_church
			loyalty = 100
		}
		add_adm_power = 50
	}
}

on_primary_culture_changed_effect = {
	if = {
		limit = { has_government_attribute = can_recruit_banners_from_primary_culture_provinces }
		every_owned_province = {
			if = {
				limit = {
					has_province_modifier = mongol_banners_location
					has_owner_culture = no
				}
				remove_province_modifier = mongol_banners_location
			}
			if = {
				limit = { has_owner_culture = yes }
				add_province_modifier = { name = mongol_banners_location duration = -1 hidden = yes }
			}
		}
	}
}

on_province_culture_change_effect = {

}

on_province_culture_converted_effect = {
	owner = {
		change_variable = {
			which = num_converted_culture
			value = 1
		}
	}
	if = {
		limit = { has_owner_culture = yes }
		owner = {
			change_variable = {
				which = num_converted_to_own_culture
				value = 1
			}
		}
	}
}

on_colony_finished_effect = {

}

on_colonist_boosting_colony_effect = {
	hidden_effect = {
		if = {
			limit = {
				OR = {
					religion = noreligion
					#test if colonists outnumber natives
					variable_arithmetic_trigger = {
						custom_tooltip = colonysize_is_larger_than_nativesize_tt
						export_to_variable = {
							which = vab_colonysize
							value = trigger_value:colonysize
						}
						export_to_variable = {
							which = vab_nativesize
							value = trigger_value:native_size
						}
						multiply_variable = {
							which = vab_nativesize
							value = 100
						}
						check_variable = {
							which = vab_colonysize
							which = vab_nativesize
						}
					}
					is_in_capital_area = yes
				}
			}
			change_religion = FROM
		}
		if = {
			limit = {
				OR = {
					culture = noculture
					#test if colonists outnumber natives
					variable_arithmetic_trigger = {
						custom_tooltip = colonysize_is_larger_than_nativesize_tt
						export_to_variable = {
							which = vab_colonysize
							value = trigger_value:colonysize
						}
						export_to_variable = {
							which = vab_nativesize
							value = trigger_value:native_size
						}
						multiply_variable = {
							which = vab_nativesize
							value = 100
						}
						check_variable = {
							which = vab_colonysize
							which = vab_nativesize
						}
					}
					is_in_capital_area = yes

				}
			}
			change_culture = FROM
			change_original_culture = FROM
		}
	}
}

on_alliance_broken_effect = {

}

on_adm_development_effect = {

	if = { 
		limit = { owner = { has_government_attribute = developing_manufactories_extra_dev_chance } has_manufactory_trigger = yes }
		random_list = { 10 = { add_base_tax = 1 } 90 = { } }
	}
	if = {
		limit = { owner = { has_country_flag = hun_bonus_dev_budapest } province_id = 153 }
		random_list = { 20 = { add_base_tax = 1 }  80 = {  }  }
	}
	if = {
		limit = { owner = { has_country_flag = enable_supplemental_development_flag } }
		random_list = { 20 = { add_base_tax = 1 } 80 = { } }
	}
	if = {
		limit = { owner = { has_country_modifier = lit_increased_dev_modifier } }
		add_base_tax = 1 
	}

}
on_dip_development_effect = {
	if = { 
		limit = { owner = { has_government_attribute = developing_manufactories_extra_dev_chance } has_manufactory_trigger = yes }
		random_list = { 10 = { add_base_production = 1 } 90 = { } }
	}

	if = {
		limit = { owner = { has_country_flag = enable_supplemental_development_flag } }
		random_list = { 20 = { add_base_production = 1 } 80 = { } }
	}

}
on_mil_development_effect = {
	if = { 
		limit = {  owner = { has_government_attribute = developing_manufactories_extra_dev_chance } has_manufactory_trigger = yes }
		random_list = { 10 = { add_base_manpower = 1 } 90 = { } }
	}
	if = {
		limit = { owner = { has_country_flag = enable_supplemental_development_flag } }
		random_list = { 20 = { add_base_manpower = 1 } 80 = { } }
	}
}
on_development_effect = {
	owner = { change_variable = { which = num_of_times_developed value = 1 } }
	
	FROM = { change_variable = { which = num_of_times_developed_var value = 1 } }
	
	on_$type$_development_effect = yes
}

# THIS = Province, FROM = Country, ROOT = Merc Unit
on_mercenary_recruited_effect = {
	if = {
		limit = {
			FROM = { has_not_free_mercs_trait = yes }
			is_not_free_merc_company = yes
		}
		if = {
			limit = {
				FROM = { 
					has_country_flag = fifty_percent_merc_army_professionalism_cost 
				}
			}
			FROM = { add_army_professionalism = -0.025 }
		}
		else = { 
			FROM = { add_army_professionalism = -0.05 } 
		}
	}
}

on_parliament_debate_reset_effect = {
	add_country_modifier = {
		name = reset_parliament_debate_modifier
		duration = 3650
	}
	add_corruption = 2
	if = {
		limit = {
			has_government_mechanic = parliament_vs_monarchy_mechanic
		}
		add_government_power = { 
			mechanic_type = parliament_vs_monarchy_mechanic
			power_type = governmental_power
			value = 20
		}
	}
}

on_parliament_seat_given_effect = {
	owner = {
		if = {
			limit = {
				has_government_mechanic = parliament_vs_monarchy_mechanic
			}
			add_government_power = { 
				mechanic_type = parliament_vs_monarchy_mechanic
				power_type = governmental_power
				value = -5
			}
		}
		if = {
			limit = {
				has_government_attribute = parliament_seat_bonus
			}
			add_estate_loyalty = {
				estate = all
				loyalty = 1
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_government_attribute = parliament_seat_bonus
			}
		}
		add_province_modifier = {
			name = gov_buffed_parliament_seat
			duration = -1
		}
	}
}
on_parliament_seat_lost_effect = {
	owner = {
		if = {
			limit = {
				has_government_mechanic = parliament_vs_monarchy_mechanic
			}
			add_government_power = { 
				mechanic_type = parliament_vs_monarchy_mechanic
				power_type = governmental_power
				value = 5
			}
		}
	}
	if = {
		limit = {
			has_province_modifier = gov_buffed_parliament_seat
		}
		remove_province_modifier = gov_buffed_parliament_seat
	}
}
on_parliament_debate_failed_effect = {
	if = {
		limit = {
			has_government_mechanic = parliament_vs_monarchy_mechanic
		}
		add_government_power = { 
			mechanic_type = parliament_vs_monarchy_mechanic
			power_type = governmental_power
			value = 33
		}
	}
}
on_parliament_debate_succeeded_effect = {
	if = {
		limit = {
			has_government_mechanic = parliament_vs_monarchy_mechanic
		}
		add_government_power = { 
			mechanic_type = parliament_vs_monarchy_mechanic
			power_type = governmental_power
			value = -20
		}
	}
	if = {
		limit = { has_government_attribute = gain_rt_from_parliament }
		add_republican_tradition = 5
	}
}

on_main_war_won_effect = {
	if = {
		limit = {
			has_government_attribute = winning_wars_gives_rt
		}
		add_republican_tradition = 5
	}
	if = {
		limit = {
			has_government_attribute = winning_war_increases_legitimacy
		}
		add_legitimacy = 5
		add_devotion = 5
		add_meritocracy = 5
		add_horde_unity = 5
		add_republican_tradition = 2
	}
	if = {
		limit = {
			ROOT = {
				has_government_mechanic = end_time_mechanic
				NOT = {
					government_power_frozen = {
						mechanic_type = end_time_mechanic
						power_type = fanatic_zeal
					}
				}
			}
		}
		add_government_power = {
			mechanic_type = end_time_mechanic
			power_type = fanatic_zeal
			value = -5
		}
	}
	
	if = {
		limit = {
			FROM = {
				religion_group = ROOT
				NOT = { religion = ROOT }
			}
		}
		change_variable = {
			which = num_of_wars_won_against_heretics
			value = 1
		}
	}
	if = {
		limit = {
			FROM = {
				NOT = { religion = ROOT }
			}
		}
		change_variable = {
			which = num_of_wars_won_against_non_believers
			value = 1
		}
	}
}

on_change_tag_effect = {
	hidden_effect = {
		restore_country_name = yes
		restore_country_color = yes
	}
}

on_force_conversion_effect = {
	FROM = {
		add_country_modifier = {
			name = recently_force_converted_protagonist_timer
			duration = 5475
			hidden = yes
		}
		if = {
			limit = { has_country_modifier = liv_protector_of_the_catholics }
			add_papal_influence = 25
		}
		change_variable = {
			which = num_of_forced_conversions
			value = 1
		}
		if = {
			limit = { has_government_attribute = gain_monarch_power_from_force_converting }
			export_to_variable = {
				variable_name = root_development
				value = total_development
				who = ROOT
			}
			while = {
				limit = {
					check_variable = {
						which = root_development
						value = 1
					}
				}
				subtract_variable = {
					which = root_development
					value = 1
				}
				add_adm_power = 1
				add_dip_power = 1
				add_mil_power = 1
			}
		}
		if = {
			limit = { has_government_attribute = gain_devotion_from_force_converting }
			export_to_variable = {
				variable_name = root_development
				value = total_development
				who = ROOT
			}
			while = {
				limit = {
					check_variable = {
						which = root_development
						value = 1
					}
				}
				subtract_variable = {
					which = root_development
					value = 1
				}
				add_devotion = 0.05
			}
		}
		if = {
			limit = { has_government_mechanic = the_three_royal_fires_mechanic NOT = { has_country_flag = removed_asha_vahishta_loss_from_force_conversion } }
			export_to_variable = {
				variable_name = root_development
				value = total_development
				who = ROOT
			}
			while = {
				limit = {
					check_variable = {
						which = root_development
						value = 1
					}
				}
				subtract_variable = {
					which = root_development
					value = 1
				}
				change_asha_vahishta = { value = -1 }
			}
		}
		if = {
			limit = { has_government_attribute = theocratic_monarchy_mechanic }
			change_statists_vs_orangists = -0.05
		}
	}
}

on_general_recruited_effect = {

	add_army_professionalism = 0.01

}

on_sale_of_titles_effect = {
	hidden_effect = {
		change_variable = {
			which = sale_of_titles_counter
			value = 1
		}
	}
}
on_summon_the_diet_effect = {
	hidden_effect = {
		change_variable = {
			which = summon_the_diet_counter
			value = 1
		}
	}
}
on_seize_land_effect = {
	hidden_effect = {
		change_variable = {
			which = seize_land_counter
			value = 1
		}
		if = {
			limit = {
				has_government_attribute = has_appanages
			}
			change_variable = {
				which = can_annex_appanages_points
				value = 1
			}
		}
	}
}
on_heir_disinherited_or_death_effect = {
	if = {
		limit = { has_country_flag = heir_dip_education }
		clr_country_flag = heir_dip_education
	}
	if = {
		limit = { has_country_flag = heir_mil_education }
		clr_country_flag = heir_mil_education
	}
	if = {
		limit = { has_country_flag = heir_adm_education }
		clr_country_flag = heir_adm_education
	}
	if = {
		limit = { has_ruler_flag = well_advised_tutored_heir }
		clr_ruler_flag = well_advised_tutored_heir
	}
	if = {
		limit = { has_ruler_flag = heir_went_on_grand_tour }
		clr_ruler_flag = heir_went_on_grand_tour
	}
	if = {
		limit = { has_any_heir_cult_active = yes }
		remove_heir_cult = yes
	}
}

on_defender_of_faith_loss_effect = {
	clr_country_flag = claimed_defender_of_faith_flag

}
on_defender_of_faith_claim_effect = {
	set_country_flag = claimed_defender_of_faith_flag

	if = {
		limit = {
			has_government_attribute = improved_defender_of_faith
		}
		add_country_modifier = {
			name = gov_improved_defender_of_faith_mod
			duration = -1
		}
	}
}

on_advisor_removed_effct_adm = {}
on_advisor_removed_effct_dip = {}
on_advisor_removed_effct_mil = {}
on_advisor_removed_effct = {
	on_advisor_removed_effct_$type$ = yes
	remove_grand_vizier_modifiers = yes

}


on_built_tax_building_effect = {
	if = {
		limit = {
			owner = { has_country_flag = can_place_center_of_reformation }
			is_reformation_center = no
			expelling_minorities = no
			NOT = {
				any_neighbor_province = {
					is_reformation_center = yes
				}
			}

			OR = {
				has_owner_religion = yes
				NOT = { has_active_triggered_province_modifier = religious_center }
			}
		}
		if = {
			limit = { development = 31 }
			custom_tooltip = TOO_MUCH_DEV_FOR_CENTER_OF_CONVERSION_TT
		}
		# else = {
		# 	hidden_effect = { 
		# 		owner = { 
		# 			clr_country_flag = can_place_center_of_reformation 
		# 		} 
		# 		1 = {
		# 			change_variable = {
		# 				which = zoroastrian_reform_center_counter
		# 				value = 1
		# 			}
		# 		}
		# 	}
		# 	change_religion = zoroastrian
		# 	add_reform_center = zoroastrian
		# }
	}
}

on_capital_moved_effect = {

}

on_government_change_effect = {

	clr_country_flag = pirate_mutineer_council
	clr_country_flag = caretaker_revolutionary_government
	if = {
		limit = {
			any_owned_province = { has_province_modifier = domain_of_spouses_family }
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			any_owned_province = { has_province_modifier = home_of_consort }
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	
	if = {
		limit = { has_country_modifier = the_reign_of_terror }
		remove_country_modifier = the_reign_of_terror
	}
	
}

on_native_government_change_effect = {
	
}

on_non_estate_disaster_end = {
	hidden_effect = {
		change_variable = {
			which = total_disasters_completed_counter
			value = 1
		}
	}
}

on_startup_effect = {
	
}

on_startup_dlc_cleanup_effect = {
	if = {
		limit = {
			has_dlc = "Cradle of Civilization"
			has_country_modifier = tur_janissary
		}
		remove_country_modifier = tur_janissary
	}
}

on_dependency_gained_effect = {
	convert_special_subject_to_vassal = {
		overlord = ROOT
		subject = FROM
	}

}

on_dependency_lost_effect = {
	
}

on_monarch_death_effect = {

	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
	
	if = {
		limit = { has_government_attribute = no_stability_loss_on_monarch_death }
		add_stability = 1
	}
	
}

on_conquest_effect = {
	remove_named_unrest = estate_land_seized
	clr_province_flag = has_estate_unrest_flag
	
}